buildscript {
	repositories {
		mavenCentral()
		maven {
			url 'http://repo.string.io/milestone'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE")
	}
}

allprojects {
	repositories {
		mavenCentral() 
		maven {
			url 'http://repo.spring.io/milestone'
		}
	}

	apply plugin: 'eclipse'
	apply plugin: 'idea'
}

def SPRING_CLOUD_VERSION = '1.0.0.RELEASE'

subprojects {
	apply plugin: 'java'

	sourceCompatibility = JavaVersion.VERSION_1_7
	targetCompatibility = JavaVersion.VERSION_1_7
}

project(':eurekaServer') {
	apply plugin: 'spring-boot'

	dependencies {
		compile 'org.springframework.cloud:spring-cloud-starter-parent:' + SPRING_CLOUD_VERSION
		compile("org.springframework.cloud:spring-cloud-starter-eureka-server:" + SPRING_CLOUD_VERSION) {
			exclude group: "javex.servlet", module: "sevlet-api"
		}
		compile 'org.springframework.boot:spring-boot-starter-actuator'
		compile 'org.projectlombok:lombok:1.16.2'

		testCompile 'org.springframework.boot:spring-boot-starter-test'
	}

	springBoot {
		requiresUnpack = ['com.netflix.eureka:eureka-core', 'com.netflix.eureka:eureka-client']
	}

	jar {
		baseName = 'eureka-server'
		version = '0.0.1'
	}
}

project(':configServer') {
	apply plugin: 'spring-boot'

	dependencies {
		compile 'org.springframework.boot:spring-boot-starter-web'
		compile 'org.springframework.cloud:spring-cloud-config-server:' + SPRING_CLOUD_VERSION
		compile 'com.sun.jersey:jersey-core:1.13'
		compile 'org.springframework.cloud:spring-cloud-starter-parent:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-eureka:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.boot:spring-boot-starter-actuator'

		testCompile 'org.springframework.boot:spring-boot-starter-test'
	}

	jar {
		baseName = 'config-server'
		version = '0.0.1'
	}
}

project(':serviceA') {
	apply plugin: 'spring-boot'

	dependencies {
		compile 'org.springframework.boot:spring-boot-starter-web'
		compile 'com.sun.jersey:jersey-core:1.13'
		compile 'org.springframework.cloud:spring-cloud-starter-parent:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-eureka:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-feign:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-config-client:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.boot:spring-boot-starter-actuator'
		compile project(':serviceB')
		compile 'com.netflix.hystrix:hystrix-javanica:1.3.17'

		testCompile 'org.springframework.boot:spring-boot-starter-test'
	}

	jar {
		baseName = 'service-a'
		version = '0.0.1'
	}
}

project(':serviceB') {
	apply plugin: 'spring-boot'

	dependencies {
		compile 'org.springframework.boot:spring-boot-starter-web'
		compile 'com.sun.jersey:jersey-core:1.13'
		compile 'org.springframework.cloud:spring-cloud-starter-parent:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-eureka:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-feign:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-hystrix-dashboard:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-config-client:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp:' + SPRING_CLOUD_VERSION
		compile 'org.springframework.boot:spring-boot-starter-actuator'
		compile 'com.netflix.hystrix:hystrix-javanica:1.3.17'

		testCompile 'org.springframework.boot:spring-boot-starter-test'
	}

	jar {
		baseName = 'service-b'
		version = '0.0.1'
	}
}


task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}
